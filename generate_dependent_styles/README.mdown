# Generate Dependent Styles
The script  `generate_styles_from_data.rb` can be used to automatically generate dependent CSL styles for publishers that use the same citation format(s) across multiple journals. All that is needed is a collection of journal metadata (journal title, ISSN, eISSN, citation format, etc.).

## Preparing journal metadata
Each publisher gets its own metadata directory in the `generate_dependent_styles/data` subdirectory of this repository (e.g. `data/asm` for the American Society for Microbiology). The file [data/publishers.json](https://github.com/citation-style-language/utilities/blob/master/generate_dependent_styles/data/publishers.json) matches directories to publisher names.

### Required files

#### _journals.tab
`_journals.tab` must be a tab-delimited file. Following the header row, each subsequent row should contain the metadata of a single journal. Metadata fields are identified by the column header. For example, the first few rows could look like:

    TITLE                                  ISSN       EISSN      DOCUMENTATION
    Antimicrobial Agents and Chemotherapy  0066-4804  1098-6596  http://aac.asm.org/
    Applied and Environmental Microbiology 0099-2240  1098-5336  http://aem.asm.org/
    Genome Announcements                   x          2169-8287  http://genomea.asm.org/

When preparing `_journals.tab`, keep the following in mind:

- `_journals.tab` should ideally only contain metadata that differs between journals. If, for example, all journals have the same documentation URL, this URL should be added directly to the style template.
- the only required metadata field is "TITLE", providing the style title. The field names "IDENTIFIER" and "XML-COMMENT" are reserved and may not be used within `_journals.tab`. There are no other restrictions on the naming of column headers.
- for consistency, we recommend the following names for common metadata fields:
  - "TITLESHORT": abbreviated journal title
  - "PARENT": independent parent style
  - "DOCUMENTATION": documentation URL (with "DOCUMENTATION", ampersands are automatically escaped)
  - "FORMAT": citation format (e.g. "numeric")
  - "FIELD": field (e.g. "medicine")
  - "ISSN": print ISSN
  - "EISSN": electronic ISSN
- capitalization of column headers is not important. The script uses a case-insensitive match, so "TITLE" is the same as "title" or "Title".
- there is no upper limit on the number of metadata fields.
- some journals may not have a value for each metadata field. For example, online-only journals typically don't have a print ISSN. In this case, just leave the field empty, or fill it with a single character, such as "x". 

#### _template.csl

`_template.csl` must contain the XML template for the dependent CSL styles. An example is shown below:

    <?xml version="1.0" encoding="utf-8"?>
    <style xmlns="http://purl.org/net/xbiblio/csl" version="1.0" default-locale="en-US">
      <!-- #XML-COMMENT# -->
      <info>
        <title>#TITLE#</title>
        <id>http://www.zotero.org/styles/#IDENTIFIER#</id>
        <link href="http://www.zotero.org/styles/#IDENTIFIER#" rel="self"/>
        <link href="http://www.zotero.org/styles/american-society-for-microbiology" rel="independent-parent"/>
        <link href="#DOCUMENTATION#" rel="documentation"/>
        <category citation-format="numeric"/>
        <category field="biology"/>
        <issn>#ISSN#</issn>
        <eissn>#EISSN#</eissn>
        <updated>2014-04-29T12:00:00+00:00</updated>
        <rights license="http://creativecommons.org/licenses/by-sa/3.0/">This work is licensed under a Creative Commons Attribution-ShareAlike 3.0 License</rights>
      </info>
    </style>

Placeholders in the template indicate where metadata fields should be substituted in during style generation. They must match the metadata field names from `_journals.tab`, be in all-caps and enclosed in pound signs.

The style file name is automatically generated from its title, by, among others, removing diacritics and punctuation, and replacing spaces by hyphens. The style identifier (the file name without ".csl" extension) is substituted through the "#IDENTIFIER#" placeholder, which must be used to generate the style ID and "self"-link.

The placeholder "#XML-COMMENT#" must be used in all templates, and is replaced by the string "Generated with https://github.com/citation-style-language/utilities/tree/master/generate_dependent_styles/data/**subdirectory**", with "subdirectory" matching the name of the subdirectory being processed.

If the metadata field for a journal is empty or contains only a single character, the entire line with the matching placeholder is deleted in the generated style.

### Optional files

#### _README.mdown

It is always a good idea to document your work in `_README.mdown`. Do we have contacts at the publisher? Where exactly does the metadata come from? Who reorganized the metadata into our own format?

#### _skip.txt

`_skip.txt` can be used to list journals that should be skipped during style generation. Journals can be specified by their title or identifier, one per line.

#### _rename.tab

`_rename.tab` can be used to change the file name and style identifier in generated styles. Each line in this tab-delimited file should list the original style identifier, followed by the new identifier.

An example of `_rename.tab` is shown below:

    acm-computing-surveys           computing-surveys
    acm-transactions-on-algorithms  transactions-on-algorithms

#### _extra.tab

`_extra.tab` can be used to add additional journals, or to overwrite the metadata for journals stored in `_journals.tab`. For example, you might wish to keep the metadata as provided by the publisher untouched in `_journals.tab`, while keeping track of any manual corrections in `_extra.tab`.

`_extra.tab`  must be a tab-delimited file, with the same header and column order as "_journals.tab". If entries in `_journals.tab` and `_extra.tab` share the same style ID, the entry in "_extra.tab" completely replaces the entry in `_journals.tab`. Journals defined in `_extra.tab` are treated identically as those defined in `_journals.tab` when it comes to skipping (through `_skip.txt`) and renaming (through `_rename.tab`).

## Running generate_styles_from_data.rb

The Ruby `generate_styles_from_data.rb` script can be run without arguments. In this case, the script will generate styles for each directory within `data`, and place the generated styles in matching subdirectories at `generate_dependent_styles/generated_styles`.

The `generated_styles` directory and its subdirectories will be created if they do not yet exist. Otherwise the entire contents of `generated_styles` will be replaced. (the `generated_styles` directory is listed in `.gitignore`, so you won't accidentally commit it)

Running the script with the `--dir` (or `-d`) option allows you to limit style generation to a single `data` subdirectory (e.g., `ruby generate_styles_from_data.rb -d asm`).

Running the script with the `--replace` (or `-r`) option will delete any dependent styles from the `styles` directory that have a matching XML comment ("Generated with https://github.com/citation-style-language/utilities/tree/master/generate_dependent_styles/data/**subdirectory**"), and copy over the newly generated styles. This only works if the `styles` and `utilities` repositories are checked out to the same root directory.

The `--dir` and `--replace` options can be used separately and in combination. 
